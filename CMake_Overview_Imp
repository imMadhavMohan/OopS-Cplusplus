/*CMAKE_PROJ*/
MyProject/
â”œâ”€â”€ CMakeLists.txt         # Root (trigger point)
â”œâ”€â”€ app/                   # Executable
â”‚   â”œâ”€â”€ main.cpp
â”‚   â””â”€â”€ CMakeLists.txt
â”œâ”€â”€ mylib_static/          # Static library
â”‚   â”œâ”€â”€ static_lib.cpp
â”‚   â”œâ”€â”€ static_lib.hpp
â”‚   â””â”€â”€ CMakeLists.txt
â”œâ”€â”€ mylib_shared/          # Shared library
â”‚   â”œâ”€â”€ shared_lib.cpp
â”‚   â”œâ”€â”€ shared_lib.hpp
â”‚   â””â”€â”€ CMakeLists.txt

ðŸ”¹ Root CMakeLists.txt 
cmake_minimum_required(VERSION 3.14)
project(MyProject)

set(CMAKE_CXX_STANDARD 17)

# Add subdirectories
add_subdirectory(mylib_static)
add_subdirectory(mylib_shared)
add_subdirectory(app)

ðŸ”¹ mylib_static/CMakeLists.txt
add_library(mylib_static STATIC
    static_lib.cpp
    static_lib.hpp
)

target_include_directories(mylib_static PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

ðŸ”¹ mylib_shared/CMakeLists.txt
add_library(mylib_shared SHARED
    shared_lib.cpp
    shared_lib.hpp
)

target_include_directories(mylib_shared PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

ðŸ”¹ app/CMakeLists.txt
add_executable(myapp main.cpp)

target_link_libraries(myapp
    PRIVATE
        mylib_static
        mylib_shared
)


/*
mkdir build
cd build
cmake ..
cmake --build .
*/


/***********************Eg: Second ***********************************/
| Command                 | Use in this project? | Best Location            | Notes                                 |
| ----------------------- | -------------------- | ------------------------ | ------------------------------------- |
| `add_library()`         | âœ… Yes                | In lib subdirs           | To create libs                        |
| `include_directories()` | âœ… (but avoid)        | In lib subdirs           | Prefer `target_include_directories()` |
| `include()`             | âœ… Optional           | Root or module-heavy     | To include other `.cmake` files       |
| `option()`              | âœ… Recommended        | In root `CMakeLists.txt` | For enabling/disabling features       |

ðŸ”¹ MyProject/CMakeLists.txt (root)
cmake_minimum_required(VERSION 3.14)
project(MyProject)

# Use C++17
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Optionally choose to build shared library
option(BUILD_SHARED "Build shared lib (ON=shared, OFF=static only)" ON)

# Add subdirectories (each has its own CMakeLists.txt)
add_subdirectory(mylib_static)
add_subdirectory(mylib_shared)
add_subdirectory(app)

ðŸ”¹ mylib_static/CMakeLists.txt
# Create static library
add_library(mylib_static STATIC static_lib.cpp)

# Add public include path
target_include_directories(mylib_static PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

ðŸ”¹ mylib_shared/CMakeLists.txt
# Choose SHARED or not via top-level option
if(BUILD_SHARED)
    add_library(mylib_shared SHARED shared_lib.cpp)
else()
    add_library(mylib_shared STATIC shared_lib.cpp)
endif()

# Add public include path
target_include_directories(mylib_shared PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

ðŸ”¹ app/CMakeLists.txt
# Create executable
add_executable(myapp main.cpp)

# Link to both libraries
target_link_libraries(myapp
    PRIVATE
        mylib_static
        mylib_shared
)

